{"version":3,"sources":["webpack:///./js/render.js","webpack:///./js/fps.js","webpack:///./js/paint.js","webpack:///./js/components/info.js","webpack:///./js/components/menu.js","webpack:///./js/components/matrix.js","webpack:///./js/components/ui.js","webpack:///./js/app.js","webpack:///./js/index.js","webpack:///./crate/pkg/sandtable_bg.js","webpack:///./js/glsl/sand.glsl","webpack:///./js/glsl/sandVertex.glsl","webpack:///./js/setup.js"],"names":["reglBuilder","require","window","memory","fsh","vsh","startWebGL","regl","canvas","universe","isSnapshot","gl","attributes","preserveDrawingBuffer","width","height","cell_pointer","cells","Uint8Array","buffer","dataTexture","texture","data","drawSand","blend","enable","func","srcRGB","srcAlpha","dstRGB","dstAlpha","equation","rgb","alpha","color","frag","uniforms","t","tick","skyTime","resolution","viewportWidth","viewportHeight","dpi","vert","position","count","draw","poll","fps","this","document","getElementById","frames","lastFrameTimeStamp","performance","now","delta","push","length","shift","min","Infinity","max","sum","i","Math","mean","textContent","round","eventDistance","a","b","sqrt","pow","clientX","clientY","norm","mag","magnitude","scale","s","add","sub","painting","lastPaint","repeat","smoothPaint","event","clearInterval","setInterval","paint","startEvent","UI","state","selectedElement","Species","Fish","GoldFish","d","addEventListener","preventDefault","push_undo","body","cancelable","Array","from","touches","handleTouches","paused","forEach","boundingRect","getBoundingClientRect","scaleX","ratio","ceil","devicePixelRatio","scaleY","canvasLeft","left","canvasTop","top","floor","convertEventCoordinates","x","y","Info","className","to","aria-label","Menu","close","children","id","onClick","console","log","SymmetryMode","ruleSymbols","Empty","Rule1","Rule2","Rule3","Rule4","SymmetryOptions","key","Disabled","symbol","None","Horizontal","Vertical","Quad","SlotOptions","Wild","grid_index","Matrix","props","isCenter","grid","options","myCell","find","m","incSlot","slotIndex","findIndex","e","next","setGrid","transform","onContextMenu","style","fill","pallette","strokeWidth","fontSize","isSelector","gridSquare","React","Component","Editor","clause_index","clause","getRule","j_selector","selector","j_effector","effector","j_symmetry","symmetry","Selector","Effector","r_clause","Clause","u","set_clause","setState","setRule","xmlns","viewBox","cx","cy","r","incSymmetry","newGrid","stroke","points","species","pallette_data","createElement","Object","values","filter","k","isNaN","parseFloat","range","Universe","reset","render","ctx","getContext","readPixels","RGBA","UNSIGNED_BYTE","colors","index","OrganicButton","Index","submissionMenuOpen","ff","submitting","size","dataURL","currentSubmission","prevProps","play","context","imgData","createImageData","putImageData","cellData","toDataURL","JSON","stringify","date","Date","getMonth","getDate","activeSpecies","keys","name","map","n","setElement","elementID","selected","text","background","backgroundColor","borderColor","ElementButton","src","closeMenu","display","objectFit","AppRouter","path","component","exact","innerWidth","innerHeight","h","drawBowl","ReactDOM","HUD","resize","screen_width","HUDStyle","hudWidth","parseInt","localStorage","getItem","setItem","renderLoop","max_tick_per_frame","requestAnimationFrame","load","cachedTextDecoder","TextDecoder","module","ignoreBOM","fatal","decode","cachegetUint8Memory0","getStringFromWasm0","ptr","len","wasm","subarray","_assertClass","instance","klass","Error","what","freeze","ptr0","ptr1","ret","__wrap","arg0","obj","create","prototype","v1","v2","v3","v4","v5","v6","v7","v8","v9","Rule","c0","c1","c2","ptr2","c","ri","ci","rule","__wbg_random_a3b3bcffa2ed629c","random","__wbindgen_throw","arg1","exports","timeout","setTimeout","tutorialProgress","classList","handleActivity","clearTimeout","remove"],"mappings":"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","file":"2.d640676a05bbfb9d0c94.js","sourcesContent":["const reglBuilder = require(\"regl\");\nconst GIF = require(\"gif.js\");\n// const GIF = require(\"gl-gif\");\nimport { memory } from \"../crate/pkg/sandtable_bg\";\nwindow.memory = memory;\nimport { Species } from \"../crate/pkg/sandtable\";\nimport { Universe } from \"../crate/pkg\";\nimport { finished } from \"stream\";\n\nlet fsh = require(\"./glsl/sand.glsl\");\nlet vsh = require(\"./glsl/sandVertex.glsl\");\n\nlet startWebGL = ({ canvas, universe, isSnapshot = false, gl }) => {\n  let regl;\n  if (gl) {\n    regl = reglBuilder({\n      gl,\n      attributes: { preserveDrawingBuffer: isSnapshot }\n    });\n  } else {\n    regl = reglBuilder({\n      canvas,\n      attributes: { preserveDrawingBuffer: isSnapshot }\n    });\n  }\n  // const lastFrame = regl.texture();\n  const width = universe.width();\n  const height = universe.height();\n  let cell_pointer = universe.cells();\n  let cells = new Uint8Array(memory.buffer, cell_pointer, width * height * 4);\n\n  const dataTexture = regl.texture({ width, height, data: cells });\n\n  let drawSand = regl({\n    blend: {\n      enable: true,\n      func: {\n        srcRGB: \"src alpha\",\n        srcAlpha: 1,\n        dstRGB: \"one minus src alpha\",\n        dstAlpha: 1\n      },\n      equation: {\n        rgb: \"add\",\n        alpha: \"add\"\n      },\n      color: [0, 0, 0, 0]\n    },\n    frag: fsh,\n    uniforms: {\n      t: ({ tick }) => tick,\n      skyTime: () => window.skyTime || 0,\n      dataTexture: () => {\n        cell_pointer = universe.cells();\n        cells = new Uint8Array(memory.buffer, cell_pointer, width * height * 4);\n        return dataTexture({ width, height, data: cells });\n      },\n\n      resolution: ({ viewportWidth, viewportHeight }) => [\n        viewportWidth,\n        viewportHeight\n      ],\n      dpi: 4,\n      isSnapshot\n      // backBuffer: lastFrame\n    },\n\n    vert: vsh,\n    attributes: {\n      // Full screen triangle\n      position: [\n        [-1, 4],\n        [-1, -1],\n        [4, -1]\n      ]\n    },\n    // Our triangle has 3 vertices\n    count: 3\n  });\n\n  return {\n    regl,\n    draw: () => {\n      regl.poll();\n      drawSand();\n    }\n  };\n};\n\nlet snapshot = universe => {\n  let canvas = document.createElement(\"canvas\");\n  canvas.width = universe.width() / 2;\n  canvas.height = universe.height() / 2;\n  let render = startWebGL({ universe, canvas, isSnapshot: true });\n  render();\n\n  return canvas.toDataURL(\"image/png\");\n};\n\nlet exportGif = (universe, cb) => {\n  window.paused = true;\n\n  let canvas = document.createElement(\"canvas\");\n  canvas.width = universe.width() * 2;\n  canvas.height = universe.height() * 2;\n  let w = canvas.width;\n  let h = canvas.height;\n  // let gl = canvas.getContext(\"webgl\");\n\n  var gif = new GIF({\n    workers: 2,\n    quality: 10,\n    width: canvas.width,\n    height: canvas.height,\n    transparent: \"rgba(0,0,0,0)\"\n  });\n  let frames = [];\n\n  const tmpc = document.createElement(\"canvas\");\n  tmpc.width = w;\n  tmpc.height = h;\n  const tctx = tmpc.getContext(\"2d\");\n\n  frames = [];\n  let frameSize = { width: canvas.width, height: canvas.height };\n\n  const numFrames = 20;\n  let t = window.t;\n  for (var i = 0; i < numFrames; i++) {\n    universe.set_time((t / 50) % 255);\n    t += 5;\n    universe.tick();\n    canvas = document.createElement(\"canvas\");\n    canvas.width = universe.width() * 2;\n    canvas.height = universe.height() * 2;\n    let w = canvas.width;\n    let h = canvas.height;\n    let { regl, draw } = startWebGL({ universe, canvas, isSnapshot: false });\n\n    draw();\n    console.log(\"adding frame \" + i);\n    // gif.addFrame(gl, { copy: false });\n\n    // this is faster but the y-axis gets flipped\n    // let data = new ImageData(w, h);\n    // let pixels = new Uint8Array(data.data.buffer);\n    // regl.read(pixels);\n\n    // gl.readPixels(0, 0, w, h, gl.RGBA, gl.UNSIGNED_BYTE, pixels)\n\n    // var bytes = new Uint8Array(100)\n    // regl.read(bytes)\n\n    tctx.clearRect(0, 0, w, h);\n\n    tctx.drawImage(canvas, 0, 0);\n    const data = tctx.getImageData(0, 0, w, h);\n    frames.push(data);\n\n    // // don't lock up the ui\n    // if (i % 4 == 0) {\n    //     await nextTick()\n    // }\n  }\n  // console.log(frames);\n  //boomerang\n  frames = [...frames, ...frames.slice(0).reverse()];\n  for (const frame of frames) {\n    gif.addFrame(frame, { delay: 16 });\n  }\n\n  gif.on(\"finished\", function(blob) {\n    // window.open(URL.createObjectURL(blob));\n    cb(URL.createObjectURL(blob));\n  });\n  gif.render();\n  // const renderFrame = (n = 0) => {\n  //   console.log(n);\n\n  //   if (n == 20) {\n  //     console.log(\"finished!\");\n  //     gif.on(\"finished\", function(blob) {\n  //       window.open(URL.createObjectURL(blob));\n  //     });\n  //     gif.render();\n  //   } else {\n\n  //     renderFrame(n + 1);\n  //   }\n  // };\n  // renderFrame();\n  window.paused = false;\n};\n\nlet pallette = () => {\n  let canvas = document.createElement(\"canvas\");\n\n  let species = Object.values(Species).filter(k => !isNaN(parseFloat(k)));\n  let range = Math.max(...species) + 1;\n  let universe = Universe.new(range, 1);\n  canvas.width = range;\n  canvas.height = 3;\n  universe.reset();\n\n  species.forEach(id => universe.paint(id, 0, 2, id));\n  universe.paint(species.Empty, 0, 2, species.Empty);\n  let render = startWebGL({ universe, canvas, isSnapshot: true }).draw;\n  render();\n  let ctx = canvas.getContext(\"webgl\");\n  let data = new Uint8Array(range * 4);\n  ctx.readPixels(0, 0, range, 1, ctx.RGBA, ctx.UNSIGNED_BYTE, data);\n  let colors = {};\n  species.forEach(id => {\n    let index = id * 4;\n    let color = `rgba(${data[index]},${data[index + 1]}, ${\n      data[index + 2]\n    }, 1.0)`;\n    colors[id] = color;\n  });\n  return colors;\n};\n\nexport { startWebGL, snapshot, pallette, exportGif };\n","const fps = new (class {\n  constructor() {\n    this.fps = document.getElementById(\"fps\");\n    this.frames = [];\n    this.lastFrameTimeStamp = performance.now();\n  }\n\n  render() {\n    // Convert the delta time since the last frame render into a measure\n    // of frames per second.\n    const now = performance.now();\n    const delta = now - this.lastFrameTimeStamp;\n    this.lastFrameTimeStamp = now;\n    const fps = (1 / delta) * 1000;\n\n    // Save only the latest 100 timings.\n    this.frames.push(fps);\n    if (this.frames.length > 30) {\n      this.frames.shift();\n    }\n\n    // Find the max, min, and mean of our 100 latest timings.\n    let min = Infinity;\n    let max = -Infinity;\n    let sum = 0;\n    for (let i = 0; i < this.frames.length; i++) {\n      sum += this.frames[i];\n      min = Math.min(this.frames[i], min);\n      max = Math.max(this.frames[i], max);\n    }\n    let mean = sum / this.frames.length;\n\n    // Render the statistics.\n    this.fps.textContent = `FPS:${Math.round(mean)}`;\n  }\n})();\n\nexport { fps };\n","import { height, universe, width, ratio } from \"./index.js\";\n\nimport { Species } from \"../crate/pkg\";\n\nconst canvas = document.getElementById(\"sand-canvas\");\nlet lastPlacedFish = 0;\nfunction canPlaceFish() {\n  let diff = Date.now() - lastPlacedFish;\n  if (diff > 1000) {\n    lastPlacedFish = Date.now();\n    return true;\n  } else {\n    return false;\n  }\n}\nconst eventDistance = (a, b) => {\n  return Math.sqrt(\n    Math.pow(a.clientX - b.clientX, 2) + Math.pow(a.clientY - b.clientY, 2),\n    2\n  );\n};\n\nconst magnitude = a => {\n  return Math.sqrt(Math.pow(a.clientX, 2) + Math.pow(a.clientY, 2), 2);\n};\n\nconst norm = a => {\n  let mag = magnitude(a);\n  return { clientX: a.clientX / mag, clientY: a.clientY / mag };\n};\nconst scale = (a, s) => {\n  return { clientX: a.clientX * s, clientY: a.clientY * s };\n};\nconst add = (a, b) => {\n  return { clientX: a.clientX + b.clientX, clientY: a.clientY + b.clientY };\n};\nconst sub = (a, b) => {\n  return { clientX: a.clientX - b.clientX, clientY: a.clientY - b.clientY };\n};\n\nlet painting = false;\nlet lastPaint = null;\nlet repeat = null;\n\ncanvas.addEventListener(\"mousedown\", event => {\n  event.preventDefault();\n\n  universe.push_undo();\n\n  painting = true;\n  clearInterval(repeat);\n  repeat = window.setInterval(() => paint(event), 100);\n  paint(event);\n  lastPaint = event;\n});\n\ndocument.body.addEventListener(\"mouseup\", event => {\n  clearInterval(repeat);\n  if (painting) {\n    event.preventDefault();\n    lastPaint = null;\n    painting = false;\n  }\n});\n\ncanvas.addEventListener(\"mousemove\", event => {\n  clearInterval(repeat);\n  smoothPaint(event);\n});\n\ncanvas.addEventListener(\"mouseleave\", event => {\n  clearInterval(repeat);\n  lastPaint = null;\n});\n\ncanvas.addEventListener(\"touchstart\", event => {\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n  let touches = Array.from(event.touches);\n\n  universe.push_undo();\n\n  painting = true;\n  lastPaint = event;\n  handleTouches(event);\n});\n\ncanvas.addEventListener(\"touchend\", event => {\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n  lastPaint = null;\n  painting = false;\n  clearInterval(repeat);\n});\n\ncanvas.addEventListener(\"touchmove\", event => {\n  if (!window.paused) {\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n  clearInterval(repeat);\n  handleTouches(event);\n});\n\nfunction smoothPaint(event) {\n  clearInterval(repeat);\n  repeat = window.setInterval(() => paint(event), 100);\n  let startEvent = { clientX: event.clientX, clientY: event.clientY };\n  if (!painting) {\n    return;\n  }\n  let size = 2;\n\n  let i = 0;\n  paint(startEvent);\n  if (\n    lastPaint &&\n    window.UI.state.selectedElement != Species.Fish &&\n    window.UI.state.selectedElement != Species.GoldFish\n  ) {\n    while (eventDistance(startEvent, lastPaint) > size / 3) {\n      let d = eventDistance(startEvent, lastPaint);\n      startEvent = add(\n        startEvent,\n        scale(norm(sub(lastPaint, event)), Math.min(size / 3, d))\n      );\n      i++;\n      if (i > 1000) {\n        break;\n      }\n      paint(startEvent);\n    }\n  }\n  lastPaint = event;\n}\n\nconst handleTouches = event => {\n  let touches = Array.from(event.touches);\n  if (touches.length == 1) {\n    smoothPaint(touches[0]);\n  } else {\n    touches.forEach(paint);\n  }\n};\n\nfunction convertEventCoordinates(event) {\n  const boundingRect = canvas.getBoundingClientRect();\n\n  const scaleX =\n    canvas.width /\n    (ratio * Math.ceil(window.devicePixelRatio)) /\n    boundingRect.width;\n  const scaleY =\n    canvas.height /\n    (ratio * Math.ceil(window.devicePixelRatio)) /\n    boundingRect.height;\n\n  const canvasLeft = (event.clientX - boundingRect.left) * scaleX;\n  const canvasTop = (event.clientY - boundingRect.top) * scaleY;\n\n  const x = Math.min(Math.floor(canvasLeft), width - 1);\n  const y = Math.min(Math.floor(canvasTop), height - 1);\n  return [x, y];\n}\nconst paint = event => {\n  if (!painting) {\n    return;\n  }\n\n  const [x, y] = convertEventCoordinates(event);\n  if (window.UI.state.selectedElement < 0) return;\n\n  let size = 2;\n  universe.paint(x, y, size, window.UI.state.selectedElement);\n};\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nconst Info = () => {\n  return (\n    <div className=\"welcome-scrim\">\n      <div className=\"Info window\">\n        <div className=\"title-bar\">\n          <div className=\"title-bar-text\">Information</div>\n          <div className=\"title-bar-controls\">\n            <Link to=\"/\">\n              <button aria-label=\"Minimize\"></button>\n            </Link>\n            <button aria-label=\"Maximize\"></button>\n            <Link to=\"/\">\n              <button aria-label=\"Close\"> </button>\n            </Link>\n          </div>\n        </div>\n        <div className=\"window-body \">\n          {/* <li>A sealed ecosystem simulation </li> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Info;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Menu = ({ close, children }) => {\n  return (\n    <div className=\"welcome-scrim\">\n      <div id={\"welcome\"}>\n        {children}\n        <Link to=\"/\" className=\"x\" onClick={close}>\n          <button> x</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\nexport default Menu;\n","import React from \"react\";\nimport {\n  Species,\n  Rule,\n  Clause,\n  SymmetryMode,\n  Selector,\n  Effector\n} from \"../../crate/pkg\";\n\nconsole.log(SymmetryMode);\nconsole.log(Species);\n\n// function keys(en) {\n//   return Object.keys(en)\n//     .filter(k => isNaN(parseFloat(k)))\n//     .map(k => {\n//       return { key: k, value: en[k] };\n//     });\n//   // .filter()\n// }\nlet ruleSymbols = {\n  [Species.Empty]: \"×\",\n  [Species.Rule1]: \"🜊\",\n  [Species.Rule2]: \"☉\",\n  [Species.Rule3]: \"☽\",\n  [Species.Rule4]: \"🝆\"\n};\n\nlet SymmetryOptions = [\n  {\n    key: SymmetryMode.Disabled,\n    symbol: \"×\"\n  },\n  {\n    key: SymmetryMode.None,\n    symbol: \"ⵔ\"\n  },\n  {\n    key: SymmetryMode.Horizontal,\n    symbol: \"🜕\"\n  },\n  {\n    key: SymmetryMode.Vertical,\n    symbol: \"🜔\"\n  },\n  {\n    key: SymmetryMode.Quad,\n    symbol: \"🜨\"\n  }\n];\nlet SlotOptions = [\n  {\n    key: Species.Empty,\n    symbol: \"×\"\n  },\n  {\n    key: Species.Wild,\n    symbol: \" \"\n  },\n  {\n    key: Species.Rule1,\n    symbol: ruleSymbols[Species.Rule1]\n  },\n  {\n    key: Species.Rule2,\n    symbol: ruleSymbols[Species.Rule2]\n  },\n  {\n    key: Species.Rule3,\n    symbol: ruleSymbols[Species.Rule3]\n  },\n  {\n    key: Species.Rule4,\n    symbol: ruleSymbols[Species.Rule4]\n  }\n];\n\nfunction grid_index(x, y) {\n  return y * 3 + x;\n}\nclass Matrix extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  gridSquare(x, y, isCenter) {\n    let { grid, options, selectedElement } = this.props;\n\n    let myCell = grid[grid_index(x, y)];\n\n    // console.log(options, myCell);\n    let { symbol } = options.find(m => m.key == myCell);\n    // console.log(symbol);\n    let incSlot = i => {\n      if (isCenter) return;\n\n      let { grid, options } = this.props;\n      let slotIndex = options.findIndex(e => e.key == myCell);\n      slotIndex = (slotIndex + options.length + i) % options.length;\n      let next = options[slotIndex];\n\n      grid[grid_index(x, y)] = next.key;\n      // (myCell + 1) % options.length;\n      let { setGrid } = this.props;\n      setGrid(grid);\n    };\n    return (\n      <g\n        key={`${x}-${y}`}\n        transform={`translate(${x * 55 + 15},${y * 55 + 15})`}\n        className={isCenter ? \"disabled\" : \"\"}\n        onContextMenu={e => {\n          e.preventDefault();\n          incSlot(-1, isCenter);\n        }}\n        onClick={() => incSlot(1, isCenter)}\n      >\n        <rect\n          x={0}\n          y={0}\n          width=\"50\"\n          height=\"50\"\n          className=\"mat-box\"\n          style={{\n            fill: symbol == \" \" ? \"#c0c0c0\" : window.pallette[myCell],\n            strokeWidth: 1\n          }}\n        />\n        <text x={25} y={30} style={{ fontSize: \"30px\" }}>\n          {isCenter || symbol == \"?\" ? ruleSymbols[selectedElement] : symbol}\n        </text>\n      </g>\n    );\n  }\n  render() {\n    // let { data } = this.state;\n    let { isSelector } = this.props;\n    return (\n      <g>\n        {[\n          this.gridSquare(0, 0),\n          this.gridSquare(0, 1),\n          this.gridSquare(0, 2),\n\n          this.gridSquare(1, 0),\n          this.gridSquare(1, 1, isSelector),\n          this.gridSquare(1, 2),\n\n          this.gridSquare(2, 0),\n          this.gridSquare(2, 1),\n          this.gridSquare(2, 2)\n        ]}\n      </g>\n    );\n  }\n}\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedElement: props.selectedElement,\n      clause_index: props.clause_index,\n      clause: Editor.getRule(props.selectedElement, props.clause_index)\n    };\n    window.Editor = this;\n  }\n  static getRule(selectedElement, clause_index) {\n    console.log(selectedElement, clause_index);\n    let clause = window.u.clause(selectedElement, clause_index);\n    // let clause = rule.clause(clause_index);\n    const selector = Array.from(\n      new Uint8Array(memory.buffer, clause.selector.grid(), 9)\n    );\n    const effector = Array.from(\n      new Uint8Array(memory.buffer, clause.effector.grid(), 9)\n    );\n    const symmetry = clause.symmetry();\n\n    return {\n      selector,\n      effector,\n      symmetry\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    let { selectedElement, clause_index } = props;\n    if (selectedElement != state.selectedElement && selectedElement < 4) {\n      return {\n        selectedElement,\n        clause: Editor.getRule(selectedElement, clause_index)\n      };\n    }\n\n    return null;\n  }\n  setRule() {\n    let { clause } = this.state;\n    let {\n      selector: j_selector,\n      effector: j_effector,\n      symmetry: j_symmetry\n    } = clause;\n\n    let selector = new Selector(...j_selector);\n    let effector = new Effector(...j_effector);\n    let r_clause = new Clause(\n      SymmetryOptions[j_symmetry].key,\n      selector,\n      effector\n    );\n    window.u.set_clause(\n      r_clause,\n      this.props.selectedElement,\n      this.props.clause_index\n    );\n  }\n\n  incSymmetry(i) {\n    let { clause } = this.state;\n    let { symmetry } = clause;\n\n    clause.symmetry =\n      (SymmetryOptions.length + symmetry + i) % SymmetryOptions.length;\n\n    this.setState(\n      {\n        clause\n      },\n      this.setRule\n    );\n  }\n  render() {\n    let { selectedElement } = this.props;\n    let { clause } = this.state;\n    // console.log(clause);\n    let { selector, effector, symmetry } = clause;\n\n    return (\n      <div className=\"MatrixMenu\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"-10 0 410 200\"\n          width=\"100%\"\n        >\n          <circle\n            cx={12}\n            cy={94}\n            r=\"16\"\n            className=\"mat-circle\"\n            style={{\n              strokeWidth: 1,\n              fill: \"rgba(255,255,255,0.5)\"\n            }}\n          ></circle>\n\n          <text\n            x=\"12\"\n            y=\"98\"\n            style={{ fontSize: \"30px\" }}\n            onContextMenu={e => {\n              e.preventDefault();\n              this.incSymmetry(-1);\n            }}\n            onClick={() => this.incSymmetry(1)}\n          >\n            {SymmetryOptions[symmetry].symbol}\n          </text>\n          <g transform=\"translate(20,0)\">\n            {selector && (\n              <Matrix\n                selectedElement={selectedElement}\n                options={SlotOptions}\n                grid={selector}\n                isSelector\n                setGrid={newGrid => {\n                  let { clause } = this.state;\n                  clause.selector = newGrid;\n                  this.setState({ clause }, this.setRule);\n                }}\n              />\n            )}\n          </g>\n          <g transform=\"translate(195,80)\">\n            <polygon\n              fill=\"white\"\n              stroke=\"black\"\n              points=\"15,0, 25,15 15,30, 15,20, 8,20, 8,10, 15,10 \"\n            />\n          </g>\n          <g transform=\"translate(210,0)\">\n            {effector && (\n              <Matrix\n                selectedElement={selectedElement}\n                options={SlotOptions}\n                grid={effector}\n                setGrid={newGrid => {\n                  let { clause } = this.state;\n                  clause.effector = newGrid;\n                  this.setState({ clause }, this.setRule);\n                }}\n              />\n            )}\n          </g>\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport { Editor, ruleSymbols };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { memory } from \"../../crate/pkg/sandtable_bg\";\nimport { Species } from \"../../crate/pkg/sandtable\";\n\nimport { height, universe, width, reset } from \"../index.js\";\nimport { exportGif, pallette } from \"../render.js\";\nimport Menu from \"./menu.js\";\nimport { Editor, ruleSymbols } from \"./matrix\";\n\nwindow.species = Species;\nlet pallette_data = pallette();\nwindow.pallette = pallette_data;\nconst OrganicButton = ({ onClick, className, style, children }) => {\n  return (\n    <button\n      onClick={onClick}\n      className={className}\n      style={{\n        ...style\n      }}\n    >\n      {children}\n    </button>\n  );\n};\n\nconst ElementButton = (name, selectedElement, setElement) => {\n  let elementID = Species[name];\n\n  let color = pallette_data[elementID];\n\n  let selected = elementID == selectedElement;\n\n  let background = \"inherit\";\n\n  let text = name;\n  if (ruleSymbols[elementID]) {\n    text = ruleSymbols[elementID];\n  }\n\n  return (\n    <button\n      className={selected ? `selected ${name}` : name}\n      key={name}\n      onClick={() => {\n        setElement(elementID);\n      }}\n      style={{\n        background,\n        backgroundColor: color,\n        borderColor: color,\n        filter: selected || `saturate(0.4) `\n        // lineHeight: 0\n      }}\n    >\n      {\"  \"}\n      {text}\n      {\"  \"}\n    </button>\n  );\n};\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submissionMenuOpen: false,\n      paused: false,\n      ff: false,\n      submitting: false,\n      size: 1,\n      dataURL: null,\n      currentSubmission: null,\n      selectedElement: Species.Rule1\n    };\n    window.UI = this;\n  }\n\n  componentDidUpdate(prevProps) {}\n  togglePause() {\n    window.paused = !this.state.paused;\n    this.setState({ paused: !this.state.paused });\n  }\n  toggleFF() {\n    window.ff = !this.state.ff;\n    this.setState({ ff: !this.state.ff });\n  }\n  play() {\n    window.paused = false;\n    this.setState({ paused: false });\n  }\n  pause() {\n    window.paused = true;\n    this.setState({ paused: true });\n  }\n\n  setSize(event, size) {\n    event.preventDefault();\n    this.setState({\n      size\n    });\n  }\n  reset() {\n    // if (window.confirm(\"Reset your ecosystem?\")) {\n    this.play();\n    this.setState({ currentSubmission: null });\n\n    reset();\n    // }\n  }\n\n  closeMenu() {\n    this.play();\n    this.setState({ dataURL: null });\n  }\n  upload() {\n    console.log(\"saving\");\n    // let dataURL = snapshot(universe);\n    const cells = new Uint8Array(\n      memory.buffer,\n      universe.cells(),\n      width * height * 4\n    );\n\n    // Create canvas\n    let canvas = document.createElement(\"canvas\"),\n      context = canvas.getContext(\"2d\"),\n      imgData = context.createImageData(width, height);\n\n    canvas.height = height;\n    canvas.width = width;\n\n    // fill imgData with data from cells\n    for (var i = 0; i < width * height * 4; i++) {\n      if (i % 4 == 3) {\n        imgData.data[i] = 255;\n      } else {\n        imgData.data[i] = cells[i];\n      }\n    }\n    // put data to context at (0, 0)\n    context.putImageData(imgData, 0, 0);\n\n    let cellData = canvas.toDataURL(\"image/png\");\n    let dataString = JSON.stringify(cellData);\n    try {\n      // localStorage.setItem(\"cell_data\", dataString);\n      // localStorage.setItem(\"time\", window.t);\n    } catch {\n      console.log(\"store failed\");\n    }\n\n    try {\n    } catch {\n      console.log(\"store failed\");\n    }\n  }\n  currentDateString() {\n    let date = new Date();\n    return `${date.getMonth()}-${date.getDate()}`;\n  }\n\n  load() {\n    console.log(\"loading\");\n    return;\n    var cellData = JSON.parse(localStorage.getItem(\"cell_data\"));\n\n    if (!cellData) {\n      console.log(\"no save\");\n      window.setInterval(() => this.upload(), 1000 * 10);\n\n      return;\n    }\n\n    var canvas = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    var ctx = canvas.getContext(\"2d\");\n    var img = new Image();\n    img.src = cellData;\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0);\n      var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n      const cellsData = new Uint8Array(\n        memory.buffer,\n        universe.cells(),\n        width * height * 4\n      );\n\n      // universe.reset();\n\n      for (var i = 0; i < width * height * 4; i++) {\n        cellsData[i] = imgData.data[i];\n      }\n\n      window.setInterval(() => this.upload(), 1000 * 10);\n    };\n\n    // universe.flush_undos();\n    // universe.push_undo();\n    // this.pause();\n  }\n\n  render() {\n    let { ff, selectedElement, currentSubmission, paused } = this.state;\n    let hash =\n      currentSubmission && currentSubmission.id\n        ? `#${currentSubmission.id}`\n        : \"\";\n\n    let activeSpecies = Object.keys(Species).filter(\n      name => name.length > 2 && name != \"Wild\"\n    );\n\n    return (\n      <div className=\"window fade ultima\" id=\"HUD\">\n        {/* <div className=\"title-bar\"> */}\n        {/* <div className=\"title-bar-text\">Tile Toy</div> */}\n        {/* <div className=\"title-bar-controls\">\n            <button\n              aria-label=\"Minimize\"\n              onClick={() => {\n                document.body.classList.add(\"faded\");\n              }}\n            ></button>\n            <button aria-label=\"Maximize\"></button>\n            <button\n              aria-label=\"Close\"\n              onClick={() => {\n                document.body.classList.add(\"faded\");\n              }}\n            ></button>\n          </div>\n        </div> */}\n        <div className=\"window-body hud-body\">\n          <div id=\"hud-buttons\">\n            {/* <OrganicButton\n              onClick={() => this.togglePause()}\n              className={paused ? \"selected\" : \"\"}\n            >\n              {paused ? (\n                <svg\n                  className=\"bsvg\"\n                  height=\"20\"\n                  width=\"20\"\n                  id=\"d\"\n                  viewBox=\"-50 -50 400 400\"\n                >\n                  <polygon id=\"play\" points=\"0,0 , 300,150 0,300\" />\n                </svg>\n              ) : (\n                <svg\n                  className=\"bsvg\"\n                  height=\"20\"\n                  width=\"20\"\n                  id=\"d\"\n                  viewBox=\"-50 -50 400 400\"\n                >\n                  <polygon id=\"bar2\" points=\"0,0 110,0 110,300 0,300\" />\n                  <polygon id=\"bar1\" points=\"190,0 300,0 300,300 190,300\" />\n                </svg>\n              )}\n            </OrganicButton> */}\n            {/* <OrganicButton\n              onClick={() => this.toggleFF()}\n              className={ff ? \"selected\" : \"\"}\n              active={ff}\n            >\n              <svg\n                className=\"bsvg\"\n                height=\"20\"\n                width=\"20\"\n                id=\"d\"\n                viewBox=\"-25 0 350 300\"\n              >\n                <polygon id=\"play\" points=\"0,50 , 150,150 0,250\" />\n                <polygon id=\"play\" points=\"150,50, 300,150 150,250\" />\n              </svg>\n            </OrganicButton> */}\n\n            <OrganicButton onClick={() => this.reset()}>↻</OrganicButton>\n            {/* <Link\n              to={{\n                pathname: \"/info/\",\n                hash\n              }}\n            >\n              <OrganicButton style={{ width: \"calc(100% - 4px)\" }}>\n                Info\n              </OrganicButton>\n            </Link> */}\n\n            {/* <OrganicButton\n              onClick={() => {\n                // reset();\n                universe.pop_undo();\n              }}\n              style={{ fontSize: 18, lineHeight: 0 }}\n            >\n              ↜\n            </OrganicButton> */}\n            {/* \n            <OrganicButton\n              onClick={() => {\n                exportGif(universe, blob => {\n                  this.pause();\n\n                  this.setState({ dataURL: blob });\n                });\n              }}\n            >\n              📷\n            </OrganicButton> */}\n\n            {activeSpecies.map(n =>\n              ElementButton(n, selectedElement, id =>\n                this.setState({ selectedElement: id })\n              )\n            )}\n            <img\n              style={{ width: \"100%\" }}\n              src=\"http://community.fortunecity.ws/tinpan/motorhead/13/images/barb_wire.gif\"\n            ></img>\n            {selectedElement != Species.Empty && (\n              <>\n                <Editor\n                  selectedElement={selectedElement}\n                  clause_index={0}\n                ></Editor>\n                <Editor\n                  selectedElement={selectedElement}\n                  clause_index={1}\n                ></Editor>\n                {/* <Editor\n                  selectedElement={selectedElement}\n                  clause_index={2}\n                ></Editor> */}\n              </>\n            )}\n\n            {this.state.dataURL && (\n              <Menu close={() => this.closeMenu()}>\n                <img src={this.state.dataURL} className=\"submissionImg\" />\n                <div style={{ display: \"flex\" }}></div>\n              </Menu>\n            )}\n            <img\n              style={{ width: \"100%\" }}\n              src=\"http://community.fortunecity.ws/tinpan/motorhead/13/images/barb_wire.gif\"\n            ></img>\n            <img\n              style={{ width: \"27%\", objectFit: \"contain\" }}\n              src=\"https://web.archive.org/web/20091022135502im_/http://geocities.com/witchzcat/bookflip.gif\"\n            ></img>\n            <img\n              style={{ width: \"24%\", objectFit: \"contain\" }}\n              src=\"https://web.archive.org/web/20091027090546/http://geocities.com/traditionalwitchcraft/pentagramanimation.gif\"\n            ></img>\n            <img\n              style={{ width: \"14%\", objectFit: \"contain\" }}\n              src=\"https://web.archive.org/web/20090729083846/http://www.geocities.com/silver_alchemy/torch2.gif\"\n            ></img>\n            <img\n              style={{ width: \"34%\", objectFit: \"contain\" }}\n              src=\"https://web.archive.org/web/20090902061527/http://geocities.com/sunsetstrip/hall/6613/talkskull.gig.gif\"\n            ></img>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { Index, ruleSymbols };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Info from \"./components/info\";\nimport { Index } from \"./components/ui\";\nimport Menu from \"./components/menu\";\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <Route path=\"/\" component={Index} />\n      <Route exact path=\"/info/\" component={Info} />\n    </Router>\n  );\n}\n\nfunction startApp() {\n  ReactDOM.render(<AppRouter />, document.getElementById(\"ui\"));\n}\nexport { startApp };\n","import { Universe, Species } from \"../crate/pkg\";\n\nimport { startWebGL } from \"./render\";\nimport { fps } from \"./fps\";\nimport {} from \"./paint\";\nimport {} from \"./setup\";\nimport { startApp } from \"./app\";\n\nlet ratio = 8;\nlet width = window.innerWidth / ratio;\nlet height = window.innerHeight / ratio;\n//todo scale ratio according to size;\n\nlet n = Math.min(width, height);\nlet h = n / 2;\nlet d = n - 6;\n\nconsole.log(width, height);\nconst universe = Universe.new(width, height);\n\nfunction drawBowl() {\n  universe.paint(h, h, d + 2, Species.Rule1);\n  // universe.paint(h - 30, d - 3, 20, Species.Rule1);\n  // universe.paint(h + 30, d - 3, 20, Species.Rule1);\n  universe.paint(h, h, d - 2, Species.Empty);\n}\nwindow.u = universe;\nwindow.universe = universe;\n\nstartApp();\ndrawBowl();\n\nconst canvas = document.getElementById(\"sand-canvas\");\n\ncanvas.width = width * ratio * Math.ceil(window.devicePixelRatio);\ncanvas.height = height * ratio * Math.ceil(window.devicePixelRatio);\n\nconst HUD = document.getElementById(\"HUD\");\nlet canvasSize;\nlet resize = () => {\n  let screen_width = window.innerWidth;\n  let HUDheight = 50;\n  let screen_height = window.innerHeight - HUDheight;\n\n  // let canvasStyle = \"\";\n  let HUDStyle = \"\";\n\n  if (screen_width - 150 > screen_height) {\n    // if (screen_width - window.innerHeight < 400) {\n    // landscape compressed\n    // canvasStyle = `height: ${window.innerHeight}px; margin:10px`;\n    // canvasSize = window.innerHeight;\n    let hudWidth = screen_width - window.innerHeight - 32;\n\n    HUDStyle = `width: ${hudWidth}px; margin: 10px;`;\n    // } else {\n    //   // landscape wide\n    //   canvasStyle = `height: ${window.innerHeight}px`;\n    //   canvasSize = window.innerHeight;\n    //   let hudWidth = (screen_width - window.innerHeight) / 2 - 7;\n    //   HUDStyle = `width: ${hudWidth}px; margin: 2px;`;\n    // }\n  } else {\n    //portrait (mobile)\n    // canvasSize = screen_width;\n    // canvasStyle = `width: ${screen_width}px; `;\n  }\n  HUD.style = HUDStyle;\n  // canvas.style = canvasStyle;\n};\n\nresize();\nwindow.addEventListener(\"deviceorientation\", resize, true);\nwindow.addEventListener(\"resize\", resize);\n\nlet drawSand = startWebGL({ canvas, universe });\n\nlet t = parseInt(localStorage.getItem(\"time\"), 10) || 0;\nconst renderLoop = () => {\n  const now = performance.now();\n\n  let max_tick_per_frame = window.ff ? 100 : 1;\n  for (var i = 0; i < max_tick_per_frame; i++) {\n    if (!window.paused) {\n      fps.render(); // new\n      universe.tick();\n    }\n    let elapsed_time = performance.now() - now;\n    if (elapsed_time > 16) {\n      break;\n    }\n  }\n  window.t = t;\n  drawSand.draw();\n  requestAnimationFrame(renderLoop);\n};\nfunction reset() {\n  console.log(\"reseting\");\n  localStorage.setItem(\"cell_data\", null);\n  universe.reset();\n  drawBowl();\n}\n\n// window.Editor.setRule();\n\nrenderLoop();\n\nwindow.UI.load();\n\nexport { canvas, width, height, ratio, universe, reset };\n","import * as wasm from './sandtable_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nfunction notDefined(what) { return () => { throw new Error(`${what} is not defined`); }; }\n/**\n*/\nexport const Species = Object.freeze({ Empty:10,\"10\":\"Empty\",Wild:11,\"11\":\"Wild\",Rule1:0,\"0\":\"Rule1\",Rule2:1,\"1\":\"Rule2\",Rule3:2,\"2\":\"Rule3\",Rule4:3,\"3\":\"Rule4\", });\n/**\n*/\nexport const SymmetryMode = Object.freeze({ Disabled:0,\"0\":\"Disabled\",None:1,\"1\":\"None\",Horizontal:2,\"2\":\"Horizontal\",Vertical:3,\"3\":\"Vertical\",Quad:4,\"4\":\"Quad\", });\n/**\n*/\nexport class Cell {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_cell_free(ptr);\n    }\n}\n/**\n*/\nexport class Clause {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Clause.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_clause_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get symmetry() {\n        var ret = wasm.__wbg_get_clause_symmetry(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set symmetry(arg0) {\n        wasm.__wbg_set_clause_symmetry(this.ptr, arg0);\n    }\n    /**\n    * @returns {Selector}\n    */\n    get selector() {\n        var ret = wasm.__wbg_get_clause_selector(this.ptr);\n        return Selector.__wrap(ret);\n    }\n    /**\n    * @param {Selector} arg0\n    */\n    set selector(arg0) {\n        _assertClass(arg0, Selector);\n        var ptr0 = arg0.ptr;\n        arg0.ptr = 0;\n        wasm.__wbg_set_clause_selector(this.ptr, ptr0);\n    }\n    /**\n    * @returns {Effector}\n    */\n    get effector() {\n        var ret = wasm.__wbg_get_clause_effector(this.ptr);\n        return Effector.__wrap(ret);\n    }\n    /**\n    * @param {Effector} arg0\n    */\n    set effector(arg0) {\n        _assertClass(arg0, Effector);\n        var ptr0 = arg0.ptr;\n        arg0.ptr = 0;\n        wasm.__wbg_set_clause_effector(this.ptr, ptr0);\n    }\n    /**\n    * @param {number} symmetry\n    * @param {Selector} selector\n    * @param {Effector} effector\n    */\n    constructor(symmetry, selector, effector) {\n        _assertClass(selector, Selector);\n        var ptr0 = selector.ptr;\n        selector.ptr = 0;\n        _assertClass(effector, Effector);\n        var ptr1 = effector.ptr;\n        effector.ptr = 0;\n        var ret = wasm.clause_new(symmetry, ptr0, ptr1);\n        return Clause.__wrap(ret);\n    }\n    /**\n    * @returns {Clause}\n    */\n    static new_null() {\n        var ret = wasm.clause_new_null();\n        return Clause.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    symmetry() {\n        var ret = wasm.__wbg_get_clause_symmetry(this.ptr);\n        return ret >>> 0;\n    }\n}\n/**\n*/\nexport class Effector {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Effector.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_effector_free(ptr);\n    }\n    /**\n    * @param {number} v1\n    * @param {number} v2\n    * @param {number} v3\n    * @param {number} v4\n    * @param {number} v5\n    * @param {number} v6\n    * @param {number} v7\n    * @param {number} v8\n    * @param {number} v9\n    */\n    constructor(v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var ret = wasm.effector_new(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return Effector.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    grid() {\n        var ret = wasm.effector_grid(this.ptr);\n        return ret;\n    }\n}\n/**\n*/\nexport class Rule {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Rule.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_rule_free(ptr);\n    }\n    /**\n    * @param {Clause} c0\n    * @param {Clause} c1\n    * @param {Clause} c2\n    */\n    constructor(c0, c1, c2) {\n        _assertClass(c0, Clause);\n        var ptr0 = c0.ptr;\n        c0.ptr = 0;\n        _assertClass(c1, Clause);\n        var ptr1 = c1.ptr;\n        c1.ptr = 0;\n        _assertClass(c2, Clause);\n        var ptr2 = c2.ptr;\n        c2.ptr = 0;\n        var ret = wasm.rule_new(ptr0, ptr1, ptr2);\n        return Rule.__wrap(ret);\n    }\n    /**\n    * @param {number} i\n    * @returns {Clause}\n    */\n    clause(i) {\n        var ret = wasm.rule_clause(this.ptr, i);\n        return Clause.__wrap(ret);\n    }\n    /**\n    * @param {Clause} c\n    * @param {number} i\n    */\n    set_clause(c, i) {\n        _assertClass(c, Clause);\n        wasm.rule_set_clause(this.ptr, c.ptr, i);\n    }\n}\n/**\n*/\nexport class Selector {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Selector.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_selector_free(ptr);\n    }\n    /**\n    * @param {number} v1\n    * @param {number} v2\n    * @param {number} v3\n    * @param {number} v4\n    * @param {number} v5\n    * @param {number} v6\n    * @param {number} v7\n    * @param {number} v8\n    * @param {number} v9\n    */\n    constructor(v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var ret = wasm.effector_new(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return Selector.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    grid() {\n        var ret = wasm.effector_grid(this.ptr);\n        return ret;\n    }\n}\n/**\n*/\nexport class Universe {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Universe.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_universe_free(ptr);\n    }\n    /**\n    */\n    reset() {\n        wasm.universe_reset(this.ptr);\n    }\n    /**\n    */\n    tick() {\n        wasm.universe_tick(this.ptr);\n    }\n    /**\n    * @param {number} i\n    * @returns {Rule}\n    */\n    rule(i) {\n        var ret = wasm.universe_rule(this.ptr, i);\n        return Rule.__wrap(ret);\n    }\n    /**\n    * @param {number} ri\n    * @param {number} ci\n    * @returns {Clause}\n    */\n    clause(ri, ci) {\n        var ret = wasm.universe_clause(this.ptr, ri, ci);\n        return Clause.__wrap(ret);\n    }\n    /**\n    * @param {Rule} rule\n    * @param {number} i\n    */\n    set_rule(rule, i) {\n        _assertClass(rule, Rule);\n        wasm.universe_set_rule(this.ptr, rule.ptr, i);\n    }\n    /**\n    * @param {Clause} clause\n    * @param {number} ri\n    * @param {number} ci\n    */\n    set_clause(clause, ri, ci) {\n        _assertClass(clause, Clause);\n        wasm.universe_set_clause(this.ptr, clause.ptr, ri, ci);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        var ret = wasm.universe_width(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        var ret = wasm.universe_height(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    cells() {\n        var ret = wasm.universe_cells(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} size\n    * @param {number} species\n    */\n    paint(x, y, size, species) {\n        wasm.universe_paint(this.ptr, x, y, size, species);\n    }\n    /**\n    */\n    push_undo() {\n        wasm.universe_push_undo(this.ptr);\n    }\n    /**\n    */\n    pop_undo() {\n        wasm.universe_pop_undo(this.ptr);\n    }\n    /**\n    */\n    flush_undos() {\n        wasm.universe_flush_undos(this.ptr);\n    }\n    /**\n    * @param {number} t\n    */\n    set_time(t) {\n        wasm.universe_set_time(this.ptr, t);\n    }\n    /**\n    */\n    inc_time() {\n        wasm.universe_inc_time(this.ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Universe}\n    */\n    static new(width, height) {\n        var ret = wasm.universe_new(width, height);\n        return Universe.__wrap(ret);\n    }\n}\n\nexport const __wbg_random_a3b3bcffa2ed629c = typeof Math.random == 'function' ? Math.random : notDefined('Math.random');\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n","module.exports = \"precision highp float;\\n#define GLSLIFY 1\\nuniform float t;\\nuniform float skyTime;\\n\\nuniform float dpi;\\nuniform vec2 resolution;\\nuniform bool isSnapshot;\\nuniform sampler2D backBuffer;\\nuniform sampler2D dataTexture;\\n\\nvarying vec2 uv;\\nconst float PI2 = 2. * 3.14159265358979323846;\\n\\n// clang-format off\\nvec3 hsv2rgb(vec3 c) {\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_0(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289_0(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute_0(vec4 x) {\\n     return mod289_0(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise_0(vec3 v)\\n  {\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g_0 = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g_0;\\n  vec3 i1 = min( g_0.xyz, l.zxy );\\n  vec3 i2 = max( g_0.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289_0(i);\\n  vec4 p = permute_0( permute_0( permute_0(\\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\\n//\\n// Description : Array and textureless GLSL 2D simplex noise function.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_1(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec2 mod289_1(vec2 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec3 permute_1(vec3 x) {\\n  return mod289_1(((x*34.0)+1.0)*x);\\n}\\n\\nfloat snoise_1(vec2 v)\\n  {\\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\\n                      0.024390243902439); // 1.0 / 41.0\\n// First corner\\n  vec2 i  = floor(v + dot(v, C.yy) );\\n  vec2 x0 = v -   i + dot(i, C.xx);\\n\\n// Other corners\\n  vec2 i1;\\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\\n  //i1.y = 1.0 - i1.x;\\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\\n  // x1 = x0 - i1 + 1.0 * C.xx ;\\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\\n  vec4 x12 = x0.xyxy + C.xxzz;\\n  x12.xy -= i1;\\n\\n// Permutations\\n  i = mod289_1(i); // Avoid truncation effects in permutation\\n  vec3 p = permute_1( permute_1( i.y + vec3(0.0, i1.y, 1.0 ))\\n    + i.x + vec3(0.0, i1.x, 1.0 ));\\n\\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\\n  m = m*m ;\\n  m = m*m ;\\n\\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\\n\\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\\n  vec3 h = abs(x) - 0.5;\\n  vec3 ox = floor(x + 0.5);\\n  vec3 a0 = x - ox;\\n\\n// Normalise gradients implicitly by scaling m\\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\\n\\n// Compute final noise value at P\\n  vec3 g;\\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\\n  return 130.0 * dot(m, g);\\n}\\n\\nhighp float random(vec2 co)\\n{\\n    highp float a = 12.9898;\\n    highp float b = 78.233;\\n    highp float c = 43758.5453;\\n    highp float dt= dot(co.xy ,vec2(a,b));\\n    highp float sn= mod(dt,3.14);\\n    return fract(sin(sn) * c);\\n}\\n\\n// clang-format on\\n\\nvoid main() {\\n  vec2 guv = uv;\\n  vec3 color;\\n  vec2 grid = floor(guv * (resolution / (dpi * 2.)));\\n\\n  grid = floor(guv * (resolution / dpi));\\n\\n  float noise = snoise_0(vec3(grid, t * 0.05));\\n  vec2 noise_2d = vec2(floor(0.5 + noise),\\n                       floor(0.5 + snoise_0(vec3(grid, (t + 20.) * 0.05))));\\n\\n  vec2 textCoord = (guv * vec2(0.5, -0.5)) + vec2(0.5);\\n  vec2 sampleCoord = textCoord + (noise_2d / (resolution / 2.));\\n\\n  vec4 data = texture2D(dataTexture, textCoord);\\n\\n  int type = int((data.r * 255.) + 0.1);\\n  float energy = data.g;\\n  float age = data.b;\\n\\n  float hue = 0.0;\\n  float saturation = 0.6;\\n  float lightness = 0.3 + energy * 0.5;\\n  float a = 1.0;\\n  float brightness = 0.0;\\n\\n  if (type == 10) { // Air\\n\\n    hue = 0.0;\\n    saturation = 0.1;\\n    lightness = 0.1;\\n    a = 0.0;\\n    if (isSnapshot) {\\n      saturation = 0.05;\\n      lightness = 1.01;\\n      a = 1.0;\\n    }\\n\\n  } else if (type == 0) { // Glass\\n    hue = 0.1;\\n    saturation = 0.1;\\n    lightness = 0.7;\\n  } else if (type == 1) { // Sand\\n    hue = 0.1;\\n    saturation = 0.4 + (age * 0.3);\\n    lightness = 1.0 - energy * 0.5;\\n\\n  } else if (type == 1) { // Water\\n    hue = 0.58;\\n    saturation = 0.6;\\n    lightness = 0.5 + energy * 0.25 + noise * 0.1;\\n    a = 0.4;\\n    if (isSnapshot) {\\n      a = 1.0;\\n    }\\n  } else if (type == 2) { // Plant\\n    hue = 0.4;\\n    saturation = 0.4;\\n\\n  } else if (type == 6) { // Zoop\\n    hue = 0.9;\\n    lightness += 0.7;\\n  } else if (type == 7) { // Fish\\n    hue = 0.0;\\n    lightness += 0.4;\\n  } else if (type == 8) { // Bacteria\\n    hue = 0.66;\\n    saturation += 0.2;\\n    lightness += 0.2;\\n    a = 0.4;\\n    if (isSnapshot) {\\n      // lightness += 0.8;\\n      saturation -= 0.2;\\n\\n      a = 1.0;\\n    }\\n  } else if (type == 3) { // ???\\n    hue = 0.6;\\n    saturation = 0.4;\\n    lightness = 0.7 + data.g * 0.5;\\n  } else if (type == 10) { // Waste\\n    hue = 0.9;\\n    lightness -= 0.2;\\n    saturation = 0.4;\\n    a = 0.8;\\n  } else if (type == 11) { // Grass\\n    hue = 0.4;\\n    saturation = 0.4;\\n  } else if (type == 12) { // Stone\\n    hue = -0.4 + (data.g * 0.5);\\n    saturation = 0.1;\\n  } else if (type == 13) { // Wood\\n    hue = (data.g * 0.1);\\n    saturation = 0.3;\\n    lightness = 0.3 + data.g * 0.3;\\n  }\\n\\n  if (isSnapshot == false) {\\n    lightness *= (0.975 + snoise_1(floor(guv * resolution / dpi)) * 0.025);\\n  }\\n  saturation = min(saturation, 1.0);\\n  lightness = min(lightness, 1.0);\\n  color = hsv2rgb(vec3(hue, saturation, lightness));\\n\\n  gl_FragColor = vec4(color, a);\\n  // gl_FragColor = getColor(uv);\\n}\"","module.exports = \"\\n// boring \\\"pass-through\\\" vertex shader\\nprecision mediump float;\\n#define GLSLIFY 1\\nattribute vec2 position;\\nvarying vec2 uv;\\nvoid main() {\\n  uv = position;\\n  gl_Position = vec4(position, 0, 1);\\n}\"","// if (window.safari) {\n//   history.pushState(null, null, location.href);\n//   window.onpopstate = function(event) {\n//     history.go(1);\n//   };\n// }\n\nlet background = document.getElementById(\"background\");\nlet fadeTimout = 1000 * 30;\nlet timeout = window.setTimeout(() => {\n  if (window.UI.state.tutorialProgress > 3) {\n    document.body.classList.add(\"faded\");\n  }\n}, fadeTimout);\n\nlet handleActivity = e => {\n  window.clearTimeout(timeout);\n  document.body.classList.remove(\"faded\");\n  timeout = window.setTimeout(() => {\n    if (window.UI.state.tutorialProgress > 3) {\n      document.body.classList.add(\"faded\");\n    }\n  }, fadeTimout);\n};\ndocument.body.addEventListener(\"mousemove\", handleActivity);\ndocument.body.addEventListener(\"touchstart\", handleActivity);\n\nbackground.addEventListener(\"touchmove\", e => {\n  if (!window.paused) {\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n  }\n});\n\n// if (\"serviceWorker\" in navigator) {\n//   window.addEventListener(\"load\", () => {\n//     navigator.serviceWorker\n//       .register(\"/service-worker.js\")\n//       .then(registration => {\n//         console.log(\"SW registered: \", registration);\n//       })\n//       .catch(registrationError => {\n//         console.log(\"SW registration failed: \", registrationError);\n//       });\n//   });\n// }\n"],"sourceRoot":""}